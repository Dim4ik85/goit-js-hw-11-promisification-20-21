{"version":3,"sources":["task3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","delay","Promise","resolve","reject","setTimeout","id","time","console","log","logSuccess","logError","warn","amount","then","catch"],"mappings":";AAAA,IAAMA,EAA4B,SAACC,EAAKC,GAC7BC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,EAAkB,SAACC,GACjBC,IAAAA,EAAQR,EAA0B,IAAK,KAEtC,OAAA,IAAIS,QAAQ,SAACC,EAASC,GAC7BC,WAAW,WACUT,KAAKE,SAAW,IAGjCK,EAAQ,CAACG,GAAGN,EAAYM,GAAIC,KAAKN,IACjCO,QAAQC,IAAI,CAACH,GAAGN,EAAYM,GAAIC,KAAKN,KAErCG,EAAOJ,EAAYM,KAEpBL,MAICS,EAAa,SAAgB,GAAdJ,IAAAA,EAAAA,EAAAA,GAAIC,EAAAA,EAAAA,KAEvBC,QAAQC,IAAmBH,eAAAA,OAAAA,EAAmBC,kBAAAA,OAAAA,EAA9C,QAGII,EAAW,SAAAL,GACfE,QAAQI,KAAqCN,gCAAAA,OAAAA,EAA7C,+BAaFP,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAC/BC,KAAKJ,GACLK,MAAMJ,GAETZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAC/BC,KAAKJ,GACLK,MAAMJ,GAETZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,KAC/BC,KAAKJ,GACLK,MAAMJ,GAETZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAC/BC,KAAKJ,GACLK,MAAMJ","file":"task3.1db0831a.js","sourceRoot":"..\\src","sourcesContent":["const randomIntegerFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n  \r\n  const makeTransaction = (transaction) => {\r\n    const delay = randomIntegerFromInterval(200, 500);\r\n  \r\n    return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      const canProcess = Math.random() > 0.3;\r\n  \r\n      if (canProcess) {\r\n        resolve({id:transaction.id, time:delay});\r\n        console.log({id:transaction.id, time:delay});\r\n      } else {\r\n        reject(transaction.id);\r\n      }\r\n    }, delay);\r\n    })\r\n  };\r\n  \r\n  const logSuccess = ({id, time}) => {\r\n   // console.log({id, time});\r\n    console.log(`Transaction ${id} processed in ${time}ms`);\r\n  };\r\n // console.log(logSuccess);\r\n  const logError = id => {\r\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n  };\r\n  \r\n  /*\r\n   * Работает так\r\n   */\r\n  // makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\r\n  // makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\r\n  // makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\r\n  // makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\r\n  /*\r\n   * Должно работать так\r\n   */\r\n  makeTransaction({ id: 70, amount: 150 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 71, amount: 230 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 72, amount: 75 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 73, amount: 100 })\r\n    .then(logSuccess)\r\n    .catch(logError);"]}